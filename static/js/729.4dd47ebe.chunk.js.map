{"version":3,"file":"static/js/729.4dd47ebe.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\",\"item\":\"MoviesList_item__eePYv\"};","import { NavLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MoviesList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.list}>\n      {movies.map(({ id, title }) => {\n        return (\n          <li className={css.item} key={id}>\n            <NavLink to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </NavLink>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchBar_searchForm__V6XO6\",\"searchFormInput\":\"SearchBar_searchFormInput__9ldTo\",\"searchBtn\":\"SearchBar_searchBtn__cdWGi\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './SearchBar.module.css';\n\nconst SearchForm = ({ onSubmit, query }) => {\n  const [serchQuery, setSerchQuery] = useState(query);\n\n  const handleChange = evt => {\n    const { value } = evt.target;\n    setSerchQuery(value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    onSubmit(serchQuery);\n\n    reset();\n  };\n\n  const reset = () => {\n    setSerchQuery('');\n  };\n\n  return (\n    <form className={css.searchForm} onSubmit={handleSubmit}>\n      <input\n        className={css.searchFormInput}\n        type=\"text\"\n        value={serchQuery}\n        onChange={handleChange}\n        autoComplete=\"off\"\n        placeholder=\"Today I'd like to watch...\"\n      ></input>\n      <button className={css.searchBtn} type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n};\n\nexport default SearchForm;\n","import API from 'services/API';\nimport { useState, useEffect } from 'react';\nimport SearchForm from 'components/SearchBar/SearchBar';\nimport MoviesList from 'components/MoviesList';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n  const [query, setQuery] = useState(searchQuery);\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    async function getSearhMovie() {\n      try {\n        const trendingMovies = await API.searchMovies(query);\n\n        if (!trendingMovies.length) {\n          return;\n        }\n\n        setMovies([...trendingMovies]);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n      }\n    }\n    getSearhMovie();\n  }, [query]);\n\n  const handleFormSubmit = query => {\n    setQuery(query);\n    setSearchParams(query !== '' ? { query } : {});\n  };\n\n  return (\n    <>\n      <SearchForm query={query} onSubmit={handleFormSubmit} />\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'f8cde7d6eca5a69b3ec98acdc4dd8516';\n\nasync function getTrendMovies(page = 1) {\n  const url = `trending/movie/day?api_key=${API_KEY}&page=${page}`;\n  const { data } = await axios.get(url);\n\n  return data.results.map(({ title, id }) => ({\n    title,\n    id,\n  }));\n}\n\nasync function searchMovies(query) {\n  const url = `search/movie?api_key=${API_KEY}&language=en-US&query==${query}`;\n  const { data } = await axios.get(url);\n\n  return data.results.map(({ title, id }) => ({\n    title,\n    id,\n  }));\n}\n\nasync function getMovieDetails(id) {\n  const url = `/movie/${id}?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n\n  const {\n    poster_path,\n    original_title,\n    vote_average,\n    overview,\n    genres,\n    release_date,\n  } = data;\n\n  return {\n    poster_path,\n    original_title,\n    vote_average,\n    overview,\n    genres,\n    release_date,\n  };\n}\n\nasync function getMovieCredits(id) {\n  const url = `/movie/${id}/credits?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n\n  return data.cast.map(({ profile_path, name, character }) => ({\n    profile_path,\n    name,\n    character,\n  }));\n}\n\nasync function getMovieReviews(id) {\n  const url = `/movie/${id}/reviews?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n\n  return data.results.map(({ author, content, id }) => ({\n    author,\n    content,\n    id,\n  }));\n}\n\nconst api = {\n  getTrendMovies,\n  searchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n\nexport default api;\n"],"names":["movies","location","useLocation","className","css","map","id","title","to","state","from","onSubmit","query","useState","serchQuery","setSerchQuery","reset","evt","preventDefault","type","value","onChange","target","autoComplete","placeholder","setMovies","useSearchParams","searchParams","setSearchParams","searchQuery","get","setQuery","useEffect","API","trendingMovies","length","console","log","message","getSearhMovie","MoviesList","axios","API_KEY","getTrendMovies","page","url","data","results","searchMovies","getMovieDetails","poster_path","original_title","vote_average","overview","genres","release_date","getMovieCredits","cast","profile_path","name","character","getMovieReviews","author","content","api"],"sourceRoot":""}