{"version":3,"file":"static/js/234.9e2344c2.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"Reviews_reviewsList__hDAQA\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport API from 'services/API';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReview, setmovieReview] = useState(null);\n\n  useEffect(() => {\n    async function fetchMovieReview() {\n      try {\n        const movieReview = await API.getMovieReviews(Number(movieId));\n\n        if (!movieReview) {\n          return;\n        }\n        setmovieReview([...movieReview]);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    fetchMovieReview();\n  }, [movieId]);\n\n  if (!movieReview) {\n    return null;\n  }\n\n  if (!movieReview.length) {\n    return <p>We don't have any reviews for this movies.</p>;\n  }\n\n  return (\n    <ul className={css.reviewsList}>\n      {movieReview.map(({ author, content, id }) => {\n        return (\n          <li key={id}>\n            <h3>Author: {author}</h3>\n            <p>{content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'f8cde7d6eca5a69b3ec98acdc4dd8516';\n\nasync function getTrendMovies(page = 1) {\n  const url = `trending/movie/day?api_key=${API_KEY}&page=${page}`;\n  const { data } = await axios.get(url);\n\n  return data.results.map(({ title, id }) => ({\n    title,\n    id,\n  }));\n}\n\nasync function searchMovies(query) {\n  const url = `search/movie?api_key=${API_KEY}&language=en-US&query==${query}`;\n  const { data } = await axios.get(url);\n\n  return data.results.map(({ title, id }) => ({\n    title,\n    id,\n  }));\n}\n\nasync function getMovieDetails(id) {\n  const url = `/movie/${id}?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n\n  const {\n    poster_path,\n    original_title,\n    vote_average,\n    overview,\n    genres,\n    release_date,\n  } = data;\n\n  return {\n    poster_path,\n    original_title,\n    vote_average,\n    overview,\n    genres,\n    release_date,\n  };\n}\n\nasync function getMovieCredits(id) {\n  const url = `/movie/${id}/credits?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n\n  return data.cast.map(({ profile_path, name, character }) => ({\n    profile_path,\n    name,\n    character,\n  }));\n}\n\nasync function getMovieReviews(id) {\n  const url = `/movie/${id}/reviews?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n\n  return data.results.map(({ author, content, id }) => ({\n    author,\n    content,\n    id,\n  }));\n}\n\nconst api = {\n  getTrendMovies,\n  searchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n\nexport default api;\n"],"names":["movieId","useParams","useState","movieReview","setmovieReview","useEffect","API","Number","console","log","message","fetchMovieReview","length","className","css","map","author","content","id","axios","API_KEY","getTrendMovies","page","url","data","results","title","searchMovies","query","getMovieDetails","poster_path","original_title","vote_average","overview","genres","release_date","getMovieCredits","cast","profile_path","name","character","getMovieReviews","api"],"sourceRoot":""}