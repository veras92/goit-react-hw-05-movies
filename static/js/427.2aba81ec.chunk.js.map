{"version":3,"file":"static/js/427.2aba81ec.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","utils/photoPlaceholder.js","services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castImg\":\"Cast_castImg__T4WbF\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport API from 'services/API';\nimport photoPathPlace from 'utils/photoPlaceholder';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movieCast, setMovieCast] = useState(null);\n\n  useEffect(() => {\n    async function fetchMovieCredits() {\n      try {\n        const movieCast = await API.getMovieCredits(Number(movieId));\n\n        if (!movieCast) {\n          return;\n        }\n        setMovieCast([...movieCast]);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    fetchMovieCredits();\n  }, [movieId]);\n\n  if (!movieCast) {\n    return null;\n  }\n\n  if (!movieCast.length) {\n    return <p>We don't have any cast for this movies.</p>;\n  }\n\n  return (\n    <ul className={css.castList}>\n      {movieCast.map(({ profile_path, name, character }) => {\n        return (\n          <li key={name}>\n            <img\n              className={css.castImg}\n              src={photoPathPlace(profile_path)}\n              alt={name}\n            />\n            <h2>{name}</h2>\n            <p>Character: {character}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Cast;\n","export default function photoPathPlace(path) {\n  if (path == null) {\n    return 'https://static.vecteezy.com/system/resources/previews/005/903/347/original/gold-abstract-letter-s-logo-for-negative-video-recording-film-production-free-vector.jpg';\n  }\n\n  return `https://image.tmdb.org/t/p/w500${path}`;\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'f8cde7d6eca5a69b3ec98acdc4dd8516';\n\nasync function getTrendMovies(page = 1) {\n  const url = `trending/movie/day?api_key=${API_KEY}&page=${page}`;\n  const { data } = await axios.get(url);\n\n  return data.results.map(({ title, id }) => ({\n    title,\n    id,\n  }));\n}\n\nasync function searchMovies(query) {\n  const url = `search/movie?api_key=${API_KEY}&language=en-US&query==${query}`;\n  const { data } = await axios.get(url);\n\n  return data.results.map(({ title, id }) => ({\n    title,\n    id,\n  }));\n}\n\nasync function getMovieDetails(id) {\n  const url = `/movie/${id}?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n\n  const {\n    poster_path,\n    original_title,\n    vote_average,\n    overview,\n    genres,\n    release_date,\n  } = data;\n\n  return {\n    poster_path,\n    original_title,\n    vote_average,\n    overview,\n    genres,\n    release_date,\n  };\n}\n\nasync function getMovieCredits(id) {\n  const url = `/movie/${id}/credits?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n\n  return data.cast.map(({ profile_path, name, character }) => ({\n    profile_path,\n    name,\n    character,\n  }));\n}\n\nasync function getMovieReviews(id) {\n  const url = `/movie/${id}/reviews?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n\n  return data.results.map(({ author, content, id }) => ({\n    author,\n    content,\n    id,\n  }));\n}\n\nconst api = {\n  getTrendMovies,\n  searchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n\nexport default api;\n"],"names":["movieId","useParams","useState","movieCast","setMovieCast","useEffect","API","Number","console","log","message","fetchMovieCredits","length","className","css","map","path","profile_path","name","character","src","alt","axios","API_KEY","getTrendMovies","page","url","data","results","title","id","searchMovies","query","getMovieDetails","poster_path","original_title","vote_average","overview","genres","release_date","getMovieCredits","cast","getMovieReviews","author","content","api"],"sourceRoot":""}