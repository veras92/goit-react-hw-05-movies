{"version":3,"file":"static/js/936.f6100309.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx","services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\",\"item\":\"MoviesList_item__eePYv\"};","import { NavLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MoviesList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.list}>\n      {movies.map(({ id, title }) => {\n        return (\n          <li className={css.item} key={id}>\n            <NavLink to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </NavLink>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Home_container__w+u63\"};","import MoviesList from 'components/MoviesList';\nimport { useState, useEffect } from 'react';\nimport API from 'services/API';\nimport css from './Home.module.css';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    async function fetchTrendMovies() {\n      try {\n        const trendingMovies = await API.getTrendMovies();\n        if (!trendingMovies) {\n          return;\n        }\n        setMovies([...trendingMovies]);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n      }\n    }\n    fetchTrendMovies();\n  }, []);\n\n  return (\n    <main className={css.container}>\n      <h1>Trending todayðŸ”¥</h1>\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'f8cde7d6eca5a69b3ec98acdc4dd8516';\n\nasync function getTrendMovies(page = 1) {\n  const url = `trending/movie/day?api_key=${API_KEY}&page=${page}`;\n  const { data } = await axios.get(url);\n\n  return data.results.map(({ title, id }) => ({\n    title,\n    id,\n  }));\n}\n\nasync function searchMovies(query) {\n  const url = `search/movie?api_key=${API_KEY}&language=en-US&query==${query}`;\n  const { data } = await axios.get(url);\n\n  return data.results.map(({ title, id }) => ({\n    title,\n    id,\n  }));\n}\n\nasync function getMovieDetails(id) {\n  const url = `/movie/${id}?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n\n  const {\n    poster_path,\n    original_title,\n    vote_average,\n    overview,\n    genres,\n    release_date,\n  } = data;\n\n  return {\n    poster_path,\n    original_title,\n    vote_average,\n    overview,\n    genres,\n    release_date,\n  };\n}\n\nasync function getMovieCredits(id) {\n  const url = `/movie/${id}/credits?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n\n  return data.cast.map(({ profile_path, name, character }) => ({\n    profile_path,\n    name,\n    character,\n  }));\n}\n\nasync function getMovieReviews(id) {\n  const url = `/movie/${id}/reviews?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n\n  return data.results.map(({ author, content, id }) => ({\n    author,\n    content,\n    id,\n  }));\n}\n\nconst api = {\n  getTrendMovies,\n  searchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n\nexport default api;\n"],"names":["movies","location","useLocation","className","css","map","id","title","to","state","from","useState","setMovies","useEffect","API","trendingMovies","console","log","message","fetchTrendMovies","length","MoviesList","axios","API_KEY","getTrendMovies","page","url","data","results","searchMovies","query","getMovieDetails","poster_path","original_title","vote_average","overview","genres","release_date","getMovieCredits","cast","profile_path","name","character","getMovieReviews","author","content","api"],"sourceRoot":""}